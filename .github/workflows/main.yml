name: Backend CI

on:
  push:
    branches:
      - main
      - road_to_rk4
  pull_request:
    branches: 
      - main
      - road_to_rk4

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            # Делаем checkout текущей ветки
            - uses: actions/checkout@v2
            # Устанавливаем Go
            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                go-version: 1.21
            # Записываем в переменные окружения имя текущей ветки
            - name: Verify dependencies
              run: go mod verify
            # Чтобы избежать конфиликтов с URL, меняем точки на _, а слеши на минусы
            - name: Extract branch name
              shell: bash
              run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
              id: extract_branch
            - name: Get branch name
              shell: bash
              run: echo ${{ steps.extract_branch.outputs.branch }}
            # Проверяем сервис авторизации
            - name: Auth service check
              run: go build internal/cmd/auth/main.go
            # Проверяем основной сервис 
            - name: Feed service check
              run: go build internal/cmd/feed/main.go
            # Проверяем сервис изображений 
            - name: Images service check
              run: go build internal/cmd/images/main.go
            # Делаем тесты
            - name: Run tests
              run: go test -coverprofile=coverage.out `go list ./... | grep -v ./internal/image/protos | grep -v ./internal/feed/protos | grep -v ./internal/auth/proto | grep -v ./internal/auth/auth_easyjson.go | grep -v ./internal/feed/feed_easyjson.go | grep -v ./internal/image/image_easyjson.go`
#            - name: deploy
#              uses: garygrossgarten/github-action-ssh@release
#              with:
#                host: ${{ secrets.DEPLOY_SERVER_HOST }}
#                username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
#                privateKey: ${{ secrets.DEPLOY_SERVER_KEY}}
#                command: cd /home/ubuntu/project/server && git checkout ${{ steps.extract_branch.outputs.branch }} && git pull && cd .. && docker compose up -d --build && docker image prune -a -f
