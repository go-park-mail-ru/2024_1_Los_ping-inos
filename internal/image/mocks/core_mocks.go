// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	multipart "mime/multipart"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	image "main.go/internal/image"
)

// MockUseCase is a mock of UseCase interface.
type MockUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockUseCaseMockRecorder
}

// MockUseCaseMockRecorder is the mock recorder for MockUseCase.
type MockUseCaseMockRecorder struct {
	mock *MockUseCase
}

// MockImgStorage is a mock of ImgStorage interface.
type MockImgStorage struct {
	ctrl     *gomock.Controller
	recorder *MockImgStorageMockRecorder
}

// MockImgStorageMockRecorder is the mock recorder for MockImgStorage.
type MockImgStorageMockRecorder struct {
	mock *MockImgStorage
}

// NewMockImgStorage creates a new mock instance.
func NewMockImgStorage(ctrl *gomock.Controller) *MockImgStorage {
	mock := &MockImgStorage{ctrl: ctrl}
	mock.recorder = &MockImgStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImgStorage) EXPECT() *MockImgStorageMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockImgStorage) Add(ctx context.Context, image image.Image, img multipart.File) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", ctx, image, img)
	ret0, _ := ret[0].(error)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockImgStorageMockRecorder) Add(ctx, image, img interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockImgStorage)(nil).Add), ctx, image, img)
}

// Delete mocks base method.
func (m *MockImgStorage) Delete(ctx context.Context, image image.Image) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, image)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockImgStorageMockRecorder) Delete(ctx, image interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockImgStorage)(nil).Delete), ctx, image)
}

// Get mocks base method.
func (m *MockImgStorage) Get(ctx context.Context, userID int64, cell string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, userID, cell)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockImgStorageMockRecorder) Get(ctx, userID, cell interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockImgStorage)(nil).Get), ctx, userID, cell)
}
