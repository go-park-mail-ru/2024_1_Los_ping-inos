version: "3.8"
services:
  db:
    image: postgres:12-alpine
    restart: on-failure
    volumes:
      - ./db/migrations/:/docker-entrypoint-initdb.d/
    environment:
      POSTGRES_DB: tpTinder
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - pinguinos-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
#    command:
#      - '--config.file=/etc/config/prometheus.yaml'
    volumes:
      - ./prometheus:/etc/config
    ports:
      - "9090:9090"
    depends_on:
      - auth

  redis:
    container_name: redis
    image: redis:latest
    restart: on-failure
    ports:
      - "6379:6379"
    networks:
      - pinguinos-net

  feed:
    container_name: feed
    restart: on-failure
    build:
      context: .
      dockerfile: feed.Dockerfile
    depends_on:
      - db
    ports:
      - "8080:8080"
      - "8085:8085"
    env_file:
      - .env
    networks:
      - pinguinos-net

  auth:
    container_name: auth
    restart: on-failure
    depends_on:
      - db
    build:
      context: .
      dockerfile: auth.Dockerfile
    ports:
      - "8083:8083"
    networks:
      - pinguinos-net

  images:
    container_name: images
    restart: on-failure
    depends_on:
      - db
    env_file:
      - .env
    build:
      context: .
      dockerfile: images.Dockerfile
    ports:
      - "8082:8082"
    networks:
      - pinguinos-net

  adminer: # adminer db client
    image: adminer
    ports:
      - 8000:8080
    depends_on:
      - db
    networks:
      - pinguinos-net

networks:
  pinguinos-net:
    driver: bridge

volumes: # часть настроек для хранения данных
  postgresdb-data:
    driver: local